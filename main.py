from fastapi import FastAPI, File, UploadFile
from fastapi.responses import JSONResponse
import pandas as pd
from io import BytesIO

app = FastAPI()

@app.post("/generar-informe-ds44")
async def generar_informe_ds44(archivo_excel: UploadFile = File(...)):
    try:
        contents = await archivo_excel.read()
        xls = pd.ExcelFile(BytesIO(contents))
        df = xls.parse('Check list', header=2)
        df_filtrado = df[df['No Cumple'] == 'x']
        df_filtrado = df_filtrado[['Sistema de Gesti√≥n de\nSeguridad y Salud en el Trabajo (SGSST)', 'Art√≠culo']]
        df_filtrado.columns = ['Pregunta', 'Art√≠culo']
        df_filtrado = df_filtrado.dropna()

        observaciones = []
        for _, row in df_filtrado.iterrows():
            observaciones.append(f"""
üîπ Art√≠culo: {row['Art√≠culo']}
üî∏ Pregunta: {row['Pregunta']}
üìù Observaci√≥n t√©cnica: Se detecta un incumplimiento del art√≠culo {row['Art√≠culo']}, asociado al √≠tem auditado. Esta situaci√≥n debe ser corregida a la brevedad.
‚úÖ Medida sugerida: Aplicar las medidas correspondientes que aseguren el cumplimiento del art√≠culo mencionado y dejar registro documental como respaldo.
""")

        informe = "\n\n".join(observaciones) if observaciones else "No se detectaron incumplimientos en el archivo."
        return JSONResponse(content={"informe": informe})

    except Exception as e:
        return JSONResponse(status_code=500, content={"error": str(e)})